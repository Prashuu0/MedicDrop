version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: medicdrop-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: medicdrop123
      MONGO_INITDB_DATABASE: medicdrop
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - medicdrop-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: medicdrop-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - medicdrop-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medicdrop-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:medicdrop123@mongodb:27017/medicdrop?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_super_secure_jwt_secret_here
      JWT_EXPIRE: 7d
      FRONTEND_URL: http://localhost:3000
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - medicdrop-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: medicdrop-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_GOOGLE_MAPS_API_KEY: your_google_maps_api_key
      REACT_APP_RAZORPAY_KEY_ID: your_razorpay_key_id
    depends_on:
      - backend
    networks:
      - medicdrop-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: medicdrop-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - medicdrop-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  medicdrop-network:
    driver: bridge
